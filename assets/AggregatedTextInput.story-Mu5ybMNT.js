import{j as u}from"./jsx-runtime-PJfywvQB.js";import{r as n}from"./index-tnPESBdE.js";import"./index-D_0btrl3.js";import{b as o}from"./useShowToast-BNVfI4Yq.js";import"./styled-components.browser.esm-CuL3HyEV.js";import"./useBooleanState-BvRGCuoP.js";import"./index-C4WGByT4.js";import"./fuse.esm-BSXXkDLL.js";import"./index-BJt650PE.js";import"./index-aBkx2qY1.js";import"./inheritsLoose-XbxvykFZ.js";import"./useCombinedRefs-Dfiq_Z7b.js";import"./index-B9gZL0fq.js";const B={title:"core-ui/AggregatedTextInput",component:o},i=()=>{const[t,g]=n.useState("Base value"),p=`Wrapped: ${t}`;return u.jsx(o,{value:t,label:"Aggregated text",onChange:g,aggregatedDisplayValue:`${p}`,baseValueLabel:"Base value",aggregationDescription:"Computed value = 'Wrapped: ' + <base>"})},e=i.bind({});var a,r,s;e.parameters={...e.parameters,docs:{...(a=e.parameters)==null?void 0:a.docs,source:{originalSource:`() => {
  const [state, setState] = useState('Base value');
  const aggregatedValue = \`Wrapped: \${state}\`;
  return <AggregatedTextInput value={state} label="Aggregated text" onChange={setState} aggregatedDisplayValue={\`\${aggregatedValue}\`} baseValueLabel="Base value" aggregationDescription="Computed value = 'Wrapped: ' + <base>" />;
}`,...(s=(r=e.parameters)==null?void 0:r.docs)==null?void 0:s.source}}};export{e as Primary,B as default};
