import{j as i}from"./jsx-runtime-PJfywvQB.js";import{r as p}from"./index-tnPESBdE.js";import"./index-D_0btrl3.js";import{d as c}from"./useShowToast-BNVfI4Yq.js";import"./styled-components.browser.esm-CuL3HyEV.js";import"./useBooleanState-BvRGCuoP.js";import"./index-C4WGByT4.js";import"./fuse.esm-BSXXkDLL.js";import"./index-BJt650PE.js";import"./index-aBkx2qY1.js";import"./inheritsLoose-XbxvykFZ.js";import"./useCombinedRefs-Dfiq_Z7b.js";import"./index-B9gZL0fq.js";const g={title:"core-ui/AsyncSelect",component:c};async function l(t){return(await fetch("https://jsonplaceholder.typicode.com/todos").then(e=>e.json())).map(e=>({displayValue:e.title,data:e,id:e.id,kind:"todo"})).filter(e=>!t||e.displayValue.includes(t)).slice(0,10)}const m=()=>{const[t,s]=p.useState();return i.jsx(c,{label:"Select a post",fetchOptions:l,value:t,onChange:s})},o=m.bind({});var r,a,n;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`() => {
  const [value, setValue] = useState<IOption<Todo>>();
  return <AsyncSelect label="Select a post" fetchOptions={fetchOptions} value={value} onChange={setValue} />;
}`,...(n=(a=o.parameters)==null?void 0:a.docs)==null?void 0:n.source}}};export{o as Primary,g as default};
