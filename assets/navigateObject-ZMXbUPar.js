function a(n){if(Array.isArray(n))return n;if(typeof n=="string")return s(n);if(typeof n=="function")return d(n);throw new Error(`Unknown location type: ${typeof n}`)}function s(n){const t=n.match(/(?:\\.|[^.\\])+/g);if(!t)throw new Error(`could not parse location: ${n}`);return t[0]==="$"&&t.shift(),t.map(r=>l(r))}function d(n){const t=[],r=new Proxy({},{get(i,f,u){return t.push(f),u}});return n(r),t}function l(n){return n==null?void 0:n.replace(/\\(.)/g,(t,r)=>r)}function y({root:n,location:t,onTraverse:r,accessNext:i,allowUnsafeNavigation:f}){const u=a(t);let o=n;const p=[...u],e=[];for(const c of u){if(r==null||r(e,o,p),o===void 0&&f)return;o=(i??h)(o,c,[...e,c]),e.push(c),p.shift()}return r==null||r(e,o,[]),o}function h(n,t){return n==null?void 0:n[t]}export{y as n,a as p};
